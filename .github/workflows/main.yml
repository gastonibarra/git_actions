name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  # Trabajo para construir el proyecto y enviar notificación
  build_and_notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project
        run: |
          # Comandos para construir el proyecto
      - name: Send notification
        uses: gastonibarra/git_actions/send-email@v1
        with:
          to: gaston.ibarra16@hotmail.com
          message: "Build successful!"

  # Trabajo para construir la imagen Docker y subirla a Docker Hub
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build Docker image
        run: docker build -t my-app .
      - name: Log into Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push Docker image
        run: docker push my-app

  # Trabajo para implementar en GitHub Pages
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public

  # Trabajo para optimizar la ejecución del flujo de trabajo mediante el uso de caché para las dependencias de npm
  optimize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

  # Trabajo para enviar una notificación en caso de que el flujo de trabajo falle
  notification:
    runs-on: ubuntu-latest
    needs: [build_and_notify]
    if: failure()
    steps:
      - name: Send failure notification
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const issueComment = context.issue({ body: 'The build failed. Please check.' });
            await github.issues.createComment(issueComment);

  # Trabajo para ejecutar un flujo de trabajo específico para las ramas de características en pull requests
  feature_pr_workflow:
    runs-on: ubuntu-latest
    needs: [build_and_push]
    if: github.event_name == 'pull_request' && startsWith(github.event.pull_request.head.ref, 'feature/')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # Add additional steps as needed for feature PR workflow


